{{- $postinstallName := include "drupal-clone.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $postinstallName }}-postinstall
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "100"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
  labels:
    {{- include "drupal-clone.metaLabels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ $postinstallName }}-postinstall
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.jobs.postInstall.image.repository }}:{{ .Values.jobs.postInstall.image.tag }}"
        name: {{ $postinstallName }}-postinstall
        command: ["/bin/bash"]
        args:
          - -c
          - >-
        {{- if eq .Values.codeProvider.name "git" }}
            cp -a ../configmap/. web/sites/default/ &&
            tar -zxf ${ASSETS_FILENAME} &&
            rm ${ASSETS_FILENAME} &&
            mv -v files/ web/sites/default &&
            composer self-update --1 &&
            composer install &&
            cd web/ &&
            ../vendor/drush/drush/drush cr &&
            cd .. &&
            chown -R www-data:www-data web/
        {{- end }}
        {{- if eq .Values.codeProvider.name "s3" }}
            tar -zxf ${ASSETS_FILENAME} &&
            tar -zxf ${CUSTOMSITE_FILENAME} &&
            rm ${ASSETS_FILENAME} && 
            rm ${CUSTOMSITE_FILENAME} &&
            mv -v files/ web/sites/default/ &&
            cp -a ../configmap/. web/sites/default/ &&
            composer self-update --1 &&
            composer install &&
            cd web/ &&
            ../vendor/drush/drush/drush cr &&
            cd .. && 
            chown -R www-data:www-data web/ 
        {{- end }}
        imagePullPolicy: {{ .Values.jobs.postInstall.image.pullPolicy }}
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.externalDatabase.secretName }}
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.externalDatabase.secretName }}
              key: password
        - name: DB_URL
          value: {{ .Values.externalDatabase.url }}
        - name: DB_PORT
          value: "{{ .Values.externalDatabase.port }}"
        - name: DB_NAME
          value: {{ .Values.externalDatabase.name }}
        - name: ASSETS_FILENAME
          value: {{ .Values.codeProvider.assetsFileName }}
        - name: CUSTOMSITE_FILENAME
          value: {{ .Values.codeProvider.customSiteFileName }} 
        volumeMounts:
        - mountPath: /www
          name: drupal-storage
          readOnly: false
        - mountPath: /configmap
          name: settings-configmap
      restartPolicy: Never
      volumes:
        - name: settings-configmap
          configMap:
            name: {{ .Values.jobs.postInstall.settingsConfigMap }} 
        - name: drupal-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistenceClaim.existingClaim | default (printf "%s" (include "drupal-clone.fullname" .))  }} 
