# Default values for php-fpm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

volume:
    name: drupal-storage
    claim:
      name: drupal-volume-claim

preInstall:
  downloadFiles:
    name: files-drupal
    image:
      repository: minio/mc
      tag: RELEASE.2020-21-18T10-53-53Z
      pullPolicy: IfNotPresent
    environment:
      minioUrl: https://minio.cepal.org/
      filesRoute: minio/drupal/files.tar.gz
      siteRoute: minio/drupal/docker8-demo-site.tar.gz
      secret:
        name: minio-credentials

postInstall:
  migrateDrupal:
    name: migration-drupal
    image:
      repository: bennu/php-cli
      tag: testv2
      pullPolicy: IfNotPresent

phpFpm:
  replicaCount: 1

  image:
    repository: bennu/php-fpm
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "testdrupal"

  imagePullSecrets: [
    name: image-pull
  ]

  labels: [
    app: php-fpm,
    tier: backend,
    track: stable,
  ]

  selectors: [
    app: php-fpm,
    tier: backend,
  ]

  matchLabels: [
    app: php-fpm
  ]

  name: "php-fpm"
  
  environment:
    database:
      name: d8t
      port: "3306"
      url: 172.20.1.40
      secret:
        name: mysql-credentials

  ports: 
    containerPort: 9000
    name: fastcgi

  volume:
    name: drupal-storage
    claim:
      name: drupal-volume-claim

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 9000
    targetPort: 9000

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:s
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

nginx:
  replicaCount: 1

  image:
    repository: bennu/nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "testv2"

  imagePullSecrets: [
    name: image-pull
  ]

  labels: [
    app: nginx,
    tier: frontend,
    track: stable,
  ]

  selectors: [
    app: nginx,
    tier: frontend,
  ]

  matchLabells: [
    app: nginx
  ]

  name: "nginx"

  environment:
    php:
      name: php-fpm
      port: 9000

  ports:
    containerPort: 80
    name: http

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
    targetPort: 80

  ingress:
    enabled: true
    annotations: {
      kubernetes.io/ingress.class: nginx,
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true",
      nginx.ingress.kubernetes.io/proxy-buffer-size: 16k,
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: agenda2030.sgo-k8s-dev.k8stic.net
        paths: [
          path: /
        ]
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

