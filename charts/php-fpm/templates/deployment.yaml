apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "php-fpm.fullname" . }}
  labels:
    {{- include "php-fpm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "php-fpm.fullname" . }}
      {{- include "php-fpm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "php-fpm.fullname" . }}
        {{- include "php-fpm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "php-fpm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: WEB_ROOT
              value: /www
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.environment.database.secret.name }}
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.environment.database.secret.name }}
                  key: password
            - name: DB_URL
              value: {{ .Values.environment.database.url }}
            - name: DB_PORT
              value: {{ .Values.environment.database.port }}
            - name: DB_NAME
              value: {{ .Values.environment.database.name }}
          ports:
            - name: {{ .Values.ports.name }}
              containerPort: {{ .Values.ports.containerPort }}
          volumeMounts:
            - mountPath: /www
              name: {{ .Values.volume.name }}
              readOnly: false
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ .Values.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claim.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
